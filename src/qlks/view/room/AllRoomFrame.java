/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlks.view.room;

import qlks.view.user.ListUserFrame;
import qlks.view.login.MainUserFrame;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import qlks.dao.JDBCconnection;
import qlks.service.AllRoomService;
import qlks.modal.AllRoom;

/**
 *
 * @author Admin
 */
public class AllRoomFrame extends javax.swing.JFrame {

    AllRoomService allRoomService;
    DefaultTableModel defaultTableModel;

    /**
     * Creates new form AllRoomFrame
     */
    private java.sql.Connection connection;

    public java.sql.Connection getConnection() {
        return connection;
    }

    public void setConnection(java.sql.Connection conn) {
        this.connection = conn;
    }

    public java.sql.Connection getConnect() throws ClassNotFoundException, SQLException {
        Class.forName(JDBCconnection.driverName);
        connection = DriverManager.getConnection(JDBCconnection.dbURL, JDBCconnection.dbUser, JDBCconnection.dbPass);
        System.out.println("CONNECTTED!");
        return connection;
    }

    public AllRoomFrame() throws ClassNotFoundException, SQLException {
        initComponents();

        allRoomService = new AllRoomService();

        defaultTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableRooms.setModel(defaultTableModel);
        tableRooms.getTableHeader().setResizingAllowed(false);
        defaultTableModel.addColumn("Mã Phòng");
        defaultTableModel.addColumn("TÌnh trạng");
        defaultTableModel.addColumn("Loại Giường");
        defaultTableModel.addColumn("Clean Status");
        defaultTableModel.addColumn("Giá");

        setTableDataRoom(allRoomService.getAllRooms());
    }

    private void setTableDataRoom(List<AllRoom> allRooms) {
        for (AllRoom allRoom : allRooms) {
            defaultTableModel.addRow(new Object[]{allRoom.getMaPhong(), allRoom.getTinhTrang(), allRoom.getBedType(), allRoom.getCleanStatus(), allRoom.getGia()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableRooms = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnEditRoom = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý KS - Tất cả các phòng ");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableRooms.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tableRooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã phòng", "Tình trạng", "Loại giường", "Clean", "Giá"
            }
        ));
        tableRooms.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableRooms.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableRooms);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 134, 970, 303));

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jButton1.setText("Thêm phòng mới");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 69, 149, 34));

        btnEditRoom.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnEditRoom.setText("Sửa phòng");
        btnEditRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRoomActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 69, 150, 34));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/img/delete-1-icon.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, 34, 34));

        jButton3.setText("Xóa Phòng");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 73, 140, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new AddRoomFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEditRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRoomActionPerformed
        // TODO add your handling code here:
        int row = tableRooms.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn phòng muốn thao tác");
        } else {
            String MP = String.valueOf(tableRooms.getValueAt(row, 0));
            String status = String.valueOf(tableRooms.getValueAt(row, 1));

            if (status.equals("Trống")) {

                try {
                    new EditRoomFrame(MP).setVisible(true);
                    this.dispose();
                } catch (Exception e) {
                }

            } else {
                JOptionPane.showMessageDialog(null, "Phòng đang được thuê !! Không được phép thao tác");
            }
        }

    }//GEN-LAST:event_btnEditRoomActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainUserFrame().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int row = tableRooms.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn phòng muốn thao tác");
        } else {

            int confirm = JOptionPane.showConfirmDialog(AllRoomFrame.this, "Bạn có chắc chắn muốn xóa không?");
            if (confirm == JOptionPane.YES_OPTION) {
                String MP = String.valueOf(tableRooms.getValueAt(row, 0));
                String status = String.valueOf(tableRooms.getValueAt(row, 1));
                if (status.equals("Trống")) {
                    try {
                        connection = getConnect();

                        String sql = "delete from Loai_Phong where MaPhong = N'" + MP + "'";

                        PreparedStatement preparedStatement = connection.prepareStatement(sql);

                        int rs = preparedStatement.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Xóa phòng thành công");
//                    userService.deleteUser(userId);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(ListUserFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(ListUserFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    defaultTableModel.setRowCount(0);
                    try {
                        setTableDataRoom(allRoomService.getAllRooms());
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(ListUserFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(ListUserFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Phòng đang được thuê !! Không được phép thao tác");
                }

            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AllRoomFrame().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(AllRoomFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(AllRoomFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditRoom;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRooms;
    // End of variables declaration//GEN-END:variables
}
